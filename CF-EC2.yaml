AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template with VPC, two public subnets, and EC2 instances with a user script.

Resources:
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: MyVPC

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  AttachInternetGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      Tags:
        - Key: Name
          Value: PublicSubnet1

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      Tags:
        - Key: Name
          Value: PublicSubnet2

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachInternetGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH and HTTP
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  PublicEC2Instance1:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-0c55b159cbfafe1f0  # Replace with a valid AMI ID
      KeyName: my-key-pair  # Replace with your key pair name
      SubnetId: !Ref PublicSubnet1
      SecurityGroupIds:
        - !Ref SecurityGroup
      Tags:
        - Key: Name
          Value: Public-EC2-1
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum install -y httpd
          systemctl start httpd
          systemctl enable httpd
          echo "<html><head><title>EC2-1</title></head><body>" > /var/www/html/index.html
          echo "<h1>Welcome to Public EC2-1 Instance</h1>" >> /var/www/html/index.html
          echo "<p>Instance Name: Public-EC2-1</p>" >> /var/www/html/index.html
          echo "<p>Current Date & Time: $(date)</p>" >> /var/www/html/index.html
          HOUR=$(date +"%H")
          if [ $HOUR -lt 12 ]; then
            echo "<p>Good Morning!</p>" >> /var/www/html/index.html
          elif [ $HOUR -lt 18 ]; then
            echo "<p>Good Afternoon!</p>" >> /var/www/html/index.html
          else
            echo "<p>Good Evening!</p>" >> /var/www/html/index.html
          fi
          echo "</body></html>" >> /var/www/html/index.html

  PublicEC2Instance2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-0c55b159cbfafe1f0  # Replace with a valid AMI ID
      KeyName: my-key-pair  # Replace with your key pair name
      SubnetId: !Ref PublicSubnet2
      SecurityGroupIds:
        - !Ref SecurityGroup
      Tags:
        - Key: Name
          Value: Public-EC2-2
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum install -y httpd
          systemctl start httpd
          systemctl enable httpd
          echo "<html><head><title>EC2-2</title></head><body>" > /var/www/html/index.html
          echo "<h1>Welcome to Public EC2-2 Instance</h1>" >> /var/www/html/index.html
          echo "<p>Instance Name: Public-EC2-2</p>" >> /var/www/html/index.html
          echo "<p>Current Date & Time: $(date)</p>" >> /var/www/html/index.html
          HOUR=$(date +"%H")
          if [ $HOUR -lt 12 ]; then
            echo "<p>Good Morning!</p>" >> /var/www/html/index.html
          elif [ $HOUR -lt 18 ]; then
            echo "<p>Good Afternoon!</p>" >> /var/www/html/index.html
          else
            echo "<p>Good Evening!</p>" >> /var/www/html/index.html
          fi
          echo "</body></html>" >> /var/www/html/index.html

Outputs:
  VPCID:
    Description: VPC ID
    Value: !Ref MyVPC

  PublicSubnet1ID:
    Description: Public Subnet 1 ID
    Value: !Ref PublicSubnet1

  PublicSubnet2ID:
    Description: Public Subnet 2 ID
    Value: !Ref PublicSubnet2

  PublicEC2Instance1ID:
    Description: Public EC2 Instance 1 ID
    Value: !Ref PublicEC2Instance1

  PublicEC2Instance2ID:
    Description: Public EC2 Instance 2 ID
    Value: !Ref PublicEC2Instance2
